# TODO: add inputs.working-directory instead of hardcoded .

name: NPM Script

on:
  workflow_call:
    inputs:
      artifact-retention-days:
        default: 5
        description: 'Artifact retention in days'
        type: number
        required: false
      artifact-name-1:
        description: Artifact name (1) Requires `artifact-path-1`.
        required: false
        type: string
      artifact-path-1:
        description: Artifact path (1) Requires `artifact-name-1`.
        required: false
        type: string
      cache-dependency-path:
        default: ./package-lock.json
        description: 'Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. It will generate hash from the target file for primary key. It works only If cache is specified. Supports wildcards or a list of file names for caching multiple dependencies.'
        type: string
      rust-version:
        default: 1.78.0
        description: Rust version
        type: string
      script:
        description: NPM script to run. Value will be used like `npm run <value>`
        required: true
        type: string

jobs:
  npm-run:
    name: NPM Run "${{inputs.script}}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org
          cache-dependency-path: ${{inputs.cache-dependency-path}}

      - name: Set up Rust
        run: |
          rustup default ${{inputs.rust-version}}

      - name: Set up Tauri
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: ./node-modules
          key: modules-${{ hashFiles(inputs.cache-dependency-path) }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Run Script
        run: |
          npm run ${{inputs.script}}

      - name: Upload Artifact (1)
        if: ${{ inputs.artifact-name-1 && inputs.artifact-path-1 }}
        uses: actions/upload-artifact@v4
        with:
          retention-days: ${{ inputs.artifact-retention-days }}
          path: ${{ inputs.artifact-path-1 }}
          name: ${{ inputs.artifact-name-1 }}
